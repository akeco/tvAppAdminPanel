{"version":3,"sources":["webpack:///./client/react/components/ActivateQuestionList/ActivateQuestionList.js?94cf"],"names":["ActivateQuestionList","props","handleAction","index","item","changeActiveQuestion","socket","emit","setTimeout","disableButtonFunction","activeQuestion","buttonState","state","questions","currentDate","addQuestion","console","info","length","getForDate","format","get","document","location","origin","then","response","status","data","catch","error","classes","root","style","ul","map","disabledButton","id","rightAnswer","button","leftIcon","Li","li","display","marginLeft","padding","styles","theme","mixins","gutters","paddingTop","paddingBottom","marginTop","spacing","unit","marginRight","matchDispatchToProps","dispatcher","mapStateToProps"],"mappings":"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","file":"hot/hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'material-ui/Button';\nimport styled from 'styled-components';\nimport Paper from 'material-ui/Paper';\nimport { Grid } from 'react-flexbox-grid';\nimport { withStyles } from 'material-ui/styles';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport CheckIcon from 'material-ui-icons/Check';\nimport axios from 'axios';\nimport {\n    addQuestion,\n    changeActiveQuestion\n} from '../../redux/actions/index'\n\n\nclass ActivateQuestionList extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            buttonState: false\n        }\n    }\n\n    componentDidMount(){\n        const {questions, currentDate, addQuestion} = this.props;\n        console.info(\"QUESTIONS\", questions);\n        if(!questions.length){\n            const getForDate = currentDate.format('l');\n\n            axios.get(`${document.location.origin}/api/questions?filter[where][date]=${getForDate}`)\n                .then((response)=>{\n                    console.info(\"RESPONSE\",response);\n                    if(response.status == 200){\n                        addQuestion(response.data);\n                    }\n                }).catch((error)=>{\n                console.info(\"ERROR\",error);\n            });\n        }\n    }\n\n\n    handleAction = (index, item) => {\n        const {changeActiveQuestion, socket} = this.props;\n\n        socket.emit(\"activate\", {\n            ...item\n        });\n\n        changeActiveQuestion(null);\n\n        setTimeout(()=>{\n            changeActiveQuestion(index + 1);\n        }, 5000);\n\n    };\n\n    disableButtonFunction = (index) => {\n        const {activeQuestion} = this.props;\n        const {buttonState} = this.state;\n\n        if(!buttonState && index != activeQuestion) return true;\n        return false;\n    };\n\n\n    render(){\n        const {classes, questions} = this.props;\n\n        return(\n            <Grid>\n                <Paper className={classes.root}>\n                    <div>\n                        <ul style={style.ul}>\n                            {\n                                questions && questions.length > 0 && questions.map((item, index)=>{\n                                    const disabledButton = this.disableButtonFunction(index);\n                                    console.info(\"INDEX\",index);\n                                    return (\n                                        <Li key={item.id}>\n                                            <p>{`${index+1}. ${item.rightAnswer}`}</p>\n                                            <Button\n                                                raised\n                                                disabled={disabledButton}\n                                                color=\"primary\"\n                                                className={classes.button}\n                                                onClick={()=>{\n                                                    this.handleAction(index, item);\n                                                }}\n                                            >\n                                                <CheckIcon className={classes.leftIcon} />\n                                                Send\n                                            </Button>\n                                        </Li>\n                                    )\n                                }) || (\n                                    <div>\n                                        <p>Trenutno nemate unesenih pitanja</p>\n                                        <p>Da biste unijeli nova pitanja, idite na postavke</p>\n                                    </div>\n                                )\n                            }\n                        </ul>\n                    </div>\n                </Paper>\n            </Grid>\n        );\n    }\n};\n\nconst Li = styled.li`\n    display: flex;\n    align-items: center;\n    margin-bottom: 15px;\n    &:last-child{\n        margin-bottom: 0px;\n    }\n    p{\n        margin: 0;\n    }\n    & > div{\n        margin-left: auto;\n    }\n`;\n\nconst style = {\n    li: {\n        display: 'flex'\n    },\n    button: {\n        marginLeft: 'auto'\n    },\n    ul: {\n        padding: 0\n    }\n};\n\nconst styles = theme => ({\n    root: theme.mixins.gutters({\n        paddingTop: 16,\n        paddingBottom: 16,\n        marginTop: theme.spacing.unit * 3,\n    }),\n    button: {\n        marginLeft: 'auto'\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n});\n\n\nconst matchDispatchToProps = (dispatcher) => {\n    return bindActionCreators({\n        addQuestion,\n        changeActiveQuestion\n    }, dispatcher);\n};\n\nconst mapStateToProps = (state) =>{\n    return ({\n        questions: state.questions,\n        currentDate: state.currentDate,\n        activeQuestion: state.activeQuestion,\n        socket: state.socket,\n    })\n};\n\nexport default connect(mapStateToProps, matchDispatchToProps)(withStyles(styles)(ActivateQuestionList));\n\n\n// WEBPACK FOOTER //\n// ./client/react/components/ActivateQuestionList/ActivateQuestionList.js"],"sourceRoot":""}